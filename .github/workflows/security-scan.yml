name: Security Scan

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pip-audit safety
        
    - name: Run pip-audit
      run: |
        echo "Running pip-audit on dependencies..."
        pip-audit --requirement requirements/base.txt --fail-on-high || true
        
    - name: Run Safety CLI
      run: |
        echo "Running Safety CLI on dependencies..."
        safety check --json --output safety-report.json requirements/base.txt || true
        
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          safety-report.json
          
    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          # Read safety report and comment on PR if vulnerabilities found
          if [ -f "safety-report.json" ]; then
            VULNS=$(jq -r '.vulns | length' safety-report.json 2>/dev/null || echo "0")
            if [ "$VULNS" -gt 0 ]; then
              echo "Found $VULNS security vulnerabilities in dependencies"
              echo "## 🔍 Security Scan Results"
              echo "The security scan found **$VULNS vulnerabilities** that need attention."
              echo ""
              echo "### Vulnerabilities Summary:"
              jq -r '.vulns[] | "- \(.package_name): \(.advisory) (Severity: \(.severity))"' safety-report.json 2>/dev/null || echo "None found"
              echo ""
              echo "📋 **Action Required**: Please review and update vulnerable dependencies before merging."
            else
              echo "✅ No high-severity vulnerabilities found in dependencies"
          fi
