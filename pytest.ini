[tool:pytest]
# Pytest configuration for improved test coverage and reporting

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
norecursedirs = mutants_backup .git __pycache__ node_modules

# Output configuration
addopts =
    --verbose
    --tb=short
    --strict-markers
    --import-mode=importlib
    --cov=.
    --cov-report=html:htmlcov
    --cov-report=term-missing:skip-covered
    --cov-report=xml:coverage.xml
    --cov-fail-under=80

# Filter warnings to reduce noise during collection
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*aiofiles.*:ImportWarning
    ignore:.*redis.*:ImportWarning
    ignore:.*uvloop.*:ImportWarning
    ignore:.*websockets.*:ImportWarning
    ignore:.*pydantic.*:PydanticDeprecatedSince20

# Markers for different test types
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Slow running tests
    api: API endpoint tests
    security: Security related tests

# Test execution
minversion = 6.0
required_plugins = pytest-cov pytest-asyncio
# Environment variables for test collection
env =
    RESYNC_DISABLE_REDIS=1
    RESYNC_EAGER_BOOT=0

# Coverage configuration
[coverage:run]
source =
    resync
    routes
    config
    app

omit =
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */.venv/*
    */node_modules/*
    */.git/*
    */docs/*
    */scripts/*
    */temp_test/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml